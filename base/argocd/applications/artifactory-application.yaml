apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: artifactory-oss
  namespace: artifactory
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: artifactory-oss
    repoURL: https://charts.jfrog.io
    targetRevision: 107.111.8
    helm:
      releaseName: artifactory-oss
      values: |
        artifactory:
          service:
            type: ClusterIP
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
          persistence:
            storageClass: "local-path"
            size: 20Gi
            mountPath: "/var/opt/jfrog/artifactory"
          nginx:
            enabled: true
            service:
              type: ClusterIP
            extraVolumeMounts:
              - name: nginx-logs
                mountPath: /var/log/nginx
              - name: nginx-conf
                mountPath: /var/opt/jfrog/nginx
            extraVolumes:
              - name: nginx-logs
                emptyDir: {}
              - name: nginx-conf
                emptyDir: {}
            initContainers:
              - name: init-nginx-dirs
                image: busybox
                command: ['sh', '-c', 'mkdir -p /var/log/nginx /var/opt/jfrog/nginx/logrotate && chmod -R 777 /var/log/nginx /var/opt/jfrog/nginx']
                volumeMounts:
                  - name: nginx-logs
                    mountPath: /var/log/nginx
                  - name: nginx-conf
                    mountPath: /var/opt/jfrog/nginx
          postgresql:
            enabled: false
          systemYaml:
            shared:
              database:
                type: postgresql
                driver: org.postgresql.Driver
                url: jdbc:postgresql://artifactory-postgresql:5432/artifactory
                username: ${POSTGRES_USER}
                password: ${POSTGRES_PASSWORD}
              node:
                ip: artifactory-nginx
                port: 8080
                haEnabled: false
              router:
                entrypoints:
                  externalPort: 8080
                  internalPort: 8081
                  sslEnabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: artifactory
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
      - CreateNamespace=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m 